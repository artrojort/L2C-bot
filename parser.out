Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CTE_ARR
    FUNCDEF

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM globalvarsblock funcsblock main FIN SEMICOLON
Rule 2     main -> MAIN LPAREN RPAREN LCURLY main2
Rule 3     main2 -> varsblock block RCURLY
Rule 4     funcsblock -> funcs funcsblock
Rule 5     funcsblock -> empty
Rule 6     globalvarsblock -> vars varsblock
Rule 7     globalvarsblock -> empty
Rule 8     varsblock -> vars varsblock
Rule 9     varsblock -> empty
Rule 10    vars -> VARDEF type ID vars1 SEMICOLON
Rule 11    vars1 -> LBRACKET CTE_INT RBRACKET
Rule 12    vars1 -> empty
Rule 13    choosetype -> type
Rule 14    choosetype -> VOID
Rule 15    params -> type ID params1
Rule 16    params -> empty
Rule 17    params1 -> COMMA type ID params1
Rule 18    params1 -> empty
Rule 19    block -> statute block
Rule 20    block -> empty
Rule 21    statute -> cond
Rule 22    statute -> assign
Rule 23    statute -> call
Rule 24    statute -> cin
Rule 25    statute -> cout
Rule 26    statute -> delay
Rule 27    statute -> forward
Rule 28    statute -> backward
Rule 29    statute -> turnleft
Rule 30    statute -> turnright
Rule 31    statute -> servo
Rule 32    statute -> lights
Rule 33    statute -> display
Rule 34    statute -> distance
Rule 35    statute -> stop
Rule 36    statute -> return
Rule 37    cond -> IF LPAREN express RPAREN block else SEMICOLON
Rule 38    else -> ELSE block
Rule 39    else -> empty
Rule 40    assign -> ID assign1 ASSIGN express SEMICOLON
Rule 41    assign1 -> LBRACKET express RBRACKET
Rule 42    assign1 -> empty
Rule 43    call -> CALL ID LPAREN call1 RPAREN SEMICOLON
Rule 44    call1 -> express call2
Rule 45    call1 -> empty
Rule 46    call2 -> COMMA call1
Rule 47    call2 -> empty
Rule 48    cin -> CIN cin1 SEMICOLON
Rule 49    cin1 -> cin2
Rule 50    cin1 -> cin3
Rule 51    cin2 -> LPAREN ID RPAREN
Rule 52    cin3 -> LBRACKET CTE_INT RBRACKET LPAREN cin4 RPAREN
Rule 53    cin4 -> COMMA ID cin4
Rule 54    cin4 -> empty
Rule 55    cout -> COUT LPAREN express RPAREN SEMICOLON
Rule 56    delay -> DELAY LPAREN CTE_INT RPAREN SEMICOLON
Rule 57    forward -> FORWARD LPAREN express COMMA express RPAREN SEMICOLON
Rule 58    backward -> BACKWARD LPAREN express COMMA express RPAREN SEMICOLON
Rule 59    turnleft -> TURNLEFT LPAREN express COMMA express RPAREN SEMICOLON
Rule 60    turnright -> TURNRIGHT LPAREN express COMMA express RPAREN SEMICOLON
Rule 61    servo -> SERVO LPAREN express RPAREN SEMICOLON
Rule 62    lights -> LIGHTS LPAREN CTE_INT COMMA CTE_INT RPAREN SEMICOLON
Rule 63    display -> DISPLAY LPAREN CTE_CHAR RPAREN SEMICOLON
Rule 64    distance -> DISTANCE LPAREN RPAREN SEMICOLON
Rule 65    stop -> STOP LPAREN RPAREN SEMICOLON
Rule 66    return -> RETURN express SEMICOLON
Rule 67    type -> INT
Rule 68    type -> FLOAT
Rule 69    type -> BOOL
Rule 70    type -> CHAR
Rule 71    type -> STRING
Rule 72    constant -> ID
Rule 73    constant -> CTE_INT
Rule 74    constant -> CTE_FLOAT
Rule 75    constant -> CTE_STRING
Rule 76    constant -> CTE_CHAR
Rule 77    express -> compare express1
Rule 78    express1 -> express2 compare
Rule 79    express1 -> empty
Rule 80    express2 -> AND
Rule 81    express2 -> OR
Rule 82    compare -> exp compare1
Rule 83    compare1 -> LESSTHAN exp
Rule 84    compare1 -> GREATERTHAN exp
Rule 85    compare1 -> EQUALS exp
Rule 86    compare1 -> NOTEQUAL exp
Rule 87    compare1 -> empty
Rule 88    exp -> term exp1
Rule 89    exp1 -> exp2 term
Rule 90    exp1 -> empty
Rule 91    exp2 -> PLUS
Rule 92    exp2 -> MINUS
Rule 93    term -> factor term1
Rule 94    term1 -> term2 term
Rule 95    term1 -> empty
Rule 96    term2 -> MULTI
Rule 97    term2 -> DIVI
Rule 98    factor -> LPAREN express RPAREN
Rule 99    factor -> factor1 constant
Rule 100   factor1 -> PLUS
Rule 101   factor1 -> MINUS
Rule 102   factor1 -> empty
Rule 103   empty -> <empty>

Terminals, with rules where they appear

AND                  : 80
ASSIGN               : 40
BACKWARD             : 58
BOOL                 : 69
CALL                 : 43
CHAR                 : 70
CIN                  : 48
COMMA                : 17 46 53 57 58 59 60 62
COUT                 : 55
CTE_ARR              : 
CTE_CHAR             : 63 76
CTE_FLOAT            : 74
CTE_INT              : 11 52 56 62 62 73
CTE_STRING           : 75
DELAY                : 56
DISPLAY              : 63
DISTANCE             : 64
DIVI                 : 97
ELSE                 : 38
EQUALS               : 85
FIN                  : 1
FLOAT                : 68
FORWARD              : 57
FUNCDEF              : 
GREATERTHAN          : 84
ID                   : 10 15 17 40 43 51 53 72
IF                   : 37
INT                  : 67
LBRACKET             : 11 41 52
LCURLY               : 2
LESSTHAN             : 83
LIGHTS               : 62
LPAREN               : 2 37 43 51 52 55 56 57 58 59 60 61 62 63 64 65 98
MAIN                 : 2
MINUS                : 92 101
MULTI                : 96
NOTEQUAL             : 86
OR                   : 81
PLUS                 : 91 100
PROGRAM              : 1
RBRACKET             : 11 41 52
RCURLY               : 3
RETURN               : 66
RPAREN               : 2 37 43 51 52 55 56 57 58 59 60 61 62 63 64 65 98
SEMICOLON            : 1 10 37 40 43 48 55 56 57 58 59 60 61 62 63 64 65 66
SERVO                : 61
STOP                 : 65
STRING               : 71
TURNLEFT             : 59
TURNRIGHT            : 60
VARDEF               : 10
VOID                 : 14
error                : 

Nonterminals, with rules where they appear

assign               : 22
assign1              : 40
backward             : 28
block                : 3 19 37 38
call                 : 23
call1                : 43 46
call2                : 44
choosetype           : 
cin                  : 24
cin1                 : 48
cin2                 : 49
cin3                 : 50
cin4                 : 52 53
compare              : 77 78
compare1             : 82
cond                 : 21
constant             : 99
cout                 : 25
delay                : 26
display              : 33
distance             : 34
else                 : 37
empty                : 5 7 9 12 16 18 20 39 42 45 47 54 79 87 90 95 102
exp                  : 82 83 84 85 86
exp1                 : 88
exp2                 : 89
express              : 37 40 41 44 55 57 57 58 58 59 59 60 60 61 66 98
express1             : 77
express2             : 78
factor               : 93
factor1              : 99
forward              : 27
funcs                : 4
funcsblock           : 1 4
globalvarsblock      : 1
lights               : 32
main                 : 1
main2                : 2
params               : 
params1              : 15 17
program              : 0
return               : 36
servo                : 31
statute              : 19
stop                 : 35
term                 : 88 89 94
term1                : 93
term2                : 94
turnleft             : 29
turnright            : 30
type                 : 10 13 15 17
vars                 : 6 8
vars1                : 10
varsblock            : 3 6 8

